eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9nbwogIHBhdGg6IHNyYy9naXRodWIuY29tL1NvaG9Ib3VzZS9kcm9uZS1oZWxtCgpwaXBlbGluZToKICB0ZXN0OgogICAgaW1hZ2U6IGdvbGFuZzoxLjgKICAgIGNvbW1hbmRzOgogICAgICAtIGdvIGdldAogICAgICAtIGdvIHRlc3QgLWNvdmVyIC1jb3ZlcnByb2ZpbGU9Y292ZXJhZ2Uub3V0CgogIGNvbXBpbGU6CiAgICBpbWFnZTogZ29sYW5nOjEuOAogICAgY29tbWFuZHM6CiAgICAgIC0gZXhwb3J0IFBBVEg9JFBBVEg6L2dvL2JpbgogICAgICAtIGdvIGJ1aWxkIC1sZGZsYWdzICItcyAtdyAtWCBtYWluLmJ1aWxkPSREUk9ORV9CVUlMRF9OVU1CRVIiIC1hIC10YWdzIG5ldGdvCgoKICBidWlsZF9kb2NrZXJfaW1hZ2U6CiAgICBpbWFnZTogZG9ja2VyOjEuMTIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9IiR7UVVBWV9VU0VSTkFNRX0iIC1wPSIke1FVQVlfUEFTU1dPUkR9IiBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IGltYWdlIC4KICAgICAgLSBkb2NrZXIgdGFnIGltYWdlIHF1YXkuaW8vc29ob2hvdXNlL2Ryb25lLWhlbG06bGF0ZXN0CiAgICAgIC0gZG9ja2VyIHRhZyBpbWFnZSAicXVheS5pby9zb2hvaG91c2UvZHJvbmUtaGVsbToke0RST05FX0JSQU5DSH0tJHtEUk9ORV9DT01NSVRfU0hBOjA6N30iCiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby9zb2hvaG91c2UvZHJvbmUtaGVsbQogICAgIyB3aGVuOgogICAgIyAgZXZlbnQ6IFtwdXNoXQogICAgIyAgYnJhbmNoOiBbbWFzdGVyXQoKICBzbGFjazoKICAgIGltYWdlOiBwbHVnaW5zL3NsYWNrCiAgICBjaGFubmVsOiBkZXBsb3lzCiAgICB1c2VybmFtZTogZHJvbmUKICAgIHRlbXBsYXRlOiA-CiAgICAgIHt7IGJ1aWxkLmF1dGhvciB9fSBmaW5pc2hlZCBidWlsZGluZyAgKjxodHRwOi8vZHJvbmUuc29ob2hvdXNlZGlnaXRhbC5jb20vU29ob0hvdXNlL3t7IHJlcG8ubmFtZSB9fS97eyBidWlsZC5udW1iZXIgfX18e3sgYnVpbGQuYnJhbmNoIH19ICh7eyBidWlsZC5udW1iZXIgfX0pPiogb2Yge3sgcmVwby5uYW1lIH19ICB3aXRoIGEge3sgYnVpbGQuc3RhdHVzIH19IHN0YXR1cwoKCnNlcnZpY2VzOgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOjEuMTItZGluZAogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgY29tbWFuZDoKICAgICAgLSAiLXMiCiAgICAgIC0gIm92ZXJsYXkiCgpwbHVnaW46CiAgbmFtZTogZHJvbmUtaGVsbQogIGRlc2M6IEV4ZWN1dGUgaGVsbSB0bwogIHR5cGU6IGRlcGxveQogIGltYWdlOiBxdWF5LmlvL3NvaG9ob3VzZS9kcm9uZS1oZWxtCiAgbGFiZWxzOgogICAgLSBkZXBsb3kKICAgIC0ga3ViZXJuZXRlcwogICAgLSBoZWxtCg.GXECTnwKEgZI6or_B7xse6bCGVObC3KvhVVC17u6cXQ